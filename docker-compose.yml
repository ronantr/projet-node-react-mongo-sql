version: '2'
# Define the services/containers to be run
services:
  nodejs_server: # name of the NodeJS server
    container_name: nodejs
    image: node
    working_dir: "/server"
    entrypoint: 
      - "sh"
      - "-c"
      - "npm install && npm install nodemon -g && nodemon server.js"
    ports:
      - "4000:4000" # specify the NodeJS port and open up port 4000 on docker
    links:
      - database_mongodb # name we use for mongoDB database_mongodb 
      - database_postgress # name we use for mongoDB database_mql
      
    volumes: # Allows changes to local host to sync with docker container
      - "./nodejs_server/:/server" # should be the same as your WORKDIR in your DockerFile 
          # Don't sync the node_modules directory back to the client.
      - "./server/node_modules"
    depends_on: # tells the database_mongodb to start first before the NodeJS app
      - database_mongodb
      - database_postgress
  
  react_ui: # name of the react_ui
    image: node
    working_dir: "/app"
    entrypoint: 
      - "sh"
      - "-c"
      - "npm install && npm start"
    ports:
      - "3000:3000" # specify the reactJS port and open up port 4001 on docker
    links:
      - nodejs_server # name we use for nodeJS server  
    volumes: # Allows changes to local host to sync with docker container
      - "./reactjs_u/:/app" # should be the same as your WORKDIR in your DockerFile 
          # Don't sync the node_modules directory back to the client.
      - "./app/node_modules"
    tty: true # set tty to true in order to run reactJS in development mode
    stdin_open: true # set stdin_open to true in order to run reactJS in development mode
     
  database_mongodb: # name of the mongoDB database_mongodb 
    image: mongo # this is the mongoDB image if you wanted MySQL you would use mysql 
    ports: 
      - "27017:27017" # specify the mongoDB port and connect port 27017 to docker
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./SampleCollections:/usr/local/sampleCollections
      - mongo-data:/data/db
    working_dir: /usr/local/sampleCollections

  database_postgress: # name of the mysql database_mysql 
    image: postgres:alpine # this is the mysql image if you wanted MySQL you would use mysql 
    ports: 
      - "3306:3306" # specify the mySQL port and connect port 3306 to docker
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=apps
volumes:
  mongo-data: {}
  db-data: {}